# Use a multi-stage build for efficiency
FROM node:20 AS builder

WORKDIR /build

COPY package* tsconfig* nest-cli.json ./

RUN npm ci

WORKDIR /build/libs

COPY libs ./

WORKDIR /build/apps/content-watcher

COPY apps/content-watcher ./

# Build the application
RUN npm run build:content-watcher && \
    rm -rf node_modules && \
	npm ci --omit=dev

# Production stage
FROM node:20-alpine

ENV NODE_ENV=production

WORKDIR /app

COPY --from=builder /build/dist ./dist/
COPY package*.json ./
COPY --from=builder /build/node_modules ./node_modules/
RUN mkdir ./openapi-specs

# We want jq and curl in the final image, but we don't need the support files
RUN apt-get update && \
	apt-get install -y jq curl tini && \
	apt-get clean && \
	rm -rf /usr/share/doc /usr/share/man /usr/share/zsh

EXPOSE 3000

ENTRYPOINT [ "/usr/bin/tini", "--", "node", "dist/apps/content-watcher/main.js" ]
