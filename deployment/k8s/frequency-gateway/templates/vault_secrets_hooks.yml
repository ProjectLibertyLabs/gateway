{{- if .Values.vault.enabled }}

apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: account-secret
spec:
  refreshInterval: "15s" 
  secretStoreRef:
    name: vault-backend
    kind: SecretStore
  target:
    name: account-secret
    creationPolicy: Owner
  data:
    - secretKey: PROVIDER_ACCESS_TOKEN
      remoteRef:
        key: "{{ .Values.vault.secretsPath }}/account"
        property: PROVIDER_ACCESS_TOKEN
    - secretKey: PROVIDER_ACCOUNT_SEED_PHRASE
      remoteRef:
        key: "{{ .Values.vault.secretsPath }}/account"
        property: PROVIDER_ACCOUNT_SEED_PHRASE

---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: content-publishing-secret
spec:
  refreshInterval: "15s" 
  secretStoreRef:
    name: vault-backend
    kind: SecretStore
  target:
    name: content-publishing-secret
    creationPolicy: Owner
  data:
    - secretKey: IPFS_BASIC_AUTH_USER
      remoteRef:
        key: "{{ .Values.vault.secretsPath }}/content-publishing"
        property: IPFS_BASIC_AUTH_USER
    - secretKey: IPFS_BASIC_AUTH_SECRET
      remoteRef:
        key: "{{ .Values.vault.secretsPath }}/content-publishing"
        property: IPFS_BASIC_AUTH_SECRET
    - secretKey: PROVIDER_ACCOUNT_SEED_PHRASE
      remoteRef:
        key: "{{ .Values.vault.secretsPath }}/content-publishing"
        property: PROVIDER_ACCOUNT_SEED_PHRASE

---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: content-watcher-secret
spec:
  refreshInterval: "15s" 
  secretStoreRef:
    name: vault-backend
    kind: SecretStore
  target:
    name: content-watcher-secret
    creationPolicy: Owner
  data:
    - secretKey: IPFS_BASIC_AUTH_USER
      remoteRef:
        key: "{{ .Values.vault.secretsPath }}/content-watcher"
        property: IPFS_BASIC_AUTH_USER
    - secretKey: IPFS_BASIC_AUTH_SECRET
      remoteRef:
        key: "{{ .Values.vault.secretsPath }}/content-watcher"
        property: IPFS_BASIC_AUTH_SECRET

---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: graph-secret
spec:
  refreshInterval: "15s" 
  secretStoreRef:
    name: vault-backend
    kind: SecretStore
  target:
    name: graph-secret
    creationPolicy: Owner
  data:
    - secretKey: PROVIDER_ACCOUNT_SEED_PHRASE
      remoteRef:
        key: "{{ .Values.vault.secretsPath }}/graph"
        property: PROVIDER_ACCOUNT_SEED_PHRASE
    - secretKey: PROVIDER_ACCESS_TOKEN
      remoteRef:
        key: "{{ .Values.vault.secretsPath }}/graph"
        property: PROVIDER_ACCESS_TOKEN
    - secretKey: AT_REST_ENCRYPTION_KEY_SEED
      remoteRef:
        key: "{{ .Values.vault.secretsPath }}/graph"
        property: AT_REST_ENCRYPTION_KEY_SEED

{{- end }}
