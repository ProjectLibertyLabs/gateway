# yaml-language-server: $schema=https://raw.githubusercontent.com/compose-spec/compose-spec/master/schema/compose-spec.json
x-common-environment: &common-environment
  FREQUENCY_API_WS_URL: ${FREQUENCY_API_WS_URL:-wss://0.rpc.testnet.amplica.io}
  SIWF_NODE_RPC_URL: ${SIWF_NODE_RPC_URL:-https://0.rpc.testnet.amplica.io}
  REDIS_OPTIONS: ${REDIS_OPTIONS:-""}
  REDIS_URL: 'redis://redis:6379'
  PROVIDER_ID: ${PROVIDER_ID:-1}
  PROVIDER_ACCOUNT_SEED_PHRASE: ${PROVIDER_ACCOUNT_SEED_PHRASE:-//Alice}
  WEBHOOK_FAILURE_THRESHOLD: 3
  WEBHOOK_RETRY_INTERVAL_SECONDS: 10
  HEALTH_CHECK_MAX_RETRIES: 4
  HEALTH_CHECK_MAX_RETRY_INTERVAL_SECONDS: 10
  HEALTH_CHECK_SUCCESS_THRESHOLD: 10
  CAPACITY_LIMIT: '{"type":"percentage", "value":80}'
  SIWF_URL: 'https://projectlibertylabs.github.io/siwf/v1/ui'
  IPFS_ENDPOINT: ${IPFS_ENDPOINT:-http://ipfs:5001/api/v0}
  IPFS_GATEWAY_URL: ${IPFS_GATEWAY_URL:-https://ipfs.io/ipfs/[CID]}
  IPFS_BASIC_AUTH_USER: ${IPFS_BASIC_AUTH_USER:-""}
  IPFS_BASIC_AUTH_SECRET: ${IPFS_BASIC_AUTH_SECRET:-""}
  QUEUE_HIGH_WATER: 1000
  DEBUG: 'true'

x-content-publishing-env: &content-publishing-env
  START_PROCESS: content-publishing-api
  FILE_UPLOAD_MAX_SIZE_IN_BYTES: 500000000
  FILE_UPLOAD_COUNT_LIMIT: 10
  ASSET_EXPIRATION_INTERVAL_SECONDS: 300
  BATCH_INTERVAL_SECONDS: 12
  BATCH_MAX_COUNT: 1000
  ASSET_UPLOAD_VERIFICATION_DELAY_SECONDS: 5
  CACHE_KEY_PREFIX: 'content-publishing:'

x-content-watcher-env: &content-watcher-env
  STARTING_BLOCK: 759882
  BLOCKCHAIN_SCAN_INTERVAL_SECONDS: 6
  WEBHOOK_FAILURE_THRESHOLD: 4
  CACHE_KEY_PREFIX: 'content-watcher:'

x-graph-service-env: &graph-service-env
  DEBOUNCE_SECONDS: 10
  GRAPH_ENVIRONMENT_TYPE: 'Mainnet'
  RECONNECTION_SERVICE_REQUIRED: 'false'
  CACHE_KEY_PREFIX: 'graph:'
  AT_REST_ENCRYPTION_KEY_SEED: 'This should get injected as a secret'

x-account-service-env: &account-service-env
  BLOCKCHAIN_SCAN_INTERVAL_SECONDS: 1
  TRUST_UNFINALIZED_BLOCKS: 'true'
  WEBHOOK_BASE_URL: '${WEBHOOK_BASE_URL:-http://your-app.com:3001/webhooks/account-service}'
  GRAPH_ENVIRONMENT_TYPE: 'Mainnet'
  CACHE_KEY_PREFIX: 'account:'
  SIWF_V2_URI_VALIDATION: 'localhost'

services:
  redis:
    image: redis:7.0
    deploy:
      mode: replicated
      replicas: 1
    ports:
      - ${SERVICE_PORT_7}:6379
    networks:
      - gateway-net
    volumes:
      - redis_data:/data

  ipfs:
    image: ipfs/kubo:latest
    deploy:
      mode: replicated
      replicas: 1
    ports:
      - 4001:4001
      - 127.0.0.1:5001:5001
      - 127.0.0.1:8080:8080
    networks:
      - gateway-net
    volumes:
      - ${IPFS_VOLUME:-ipfs_data}:/data/ipfs

  content-publishing-service-api:
    image: projectlibertylabs/content-publishing-service:${DOCKER_TAG:-latest}
    deploy:
      mode: replicated
      replicas: 1
    ports:
      - ${SERVICE_PORT_0}:3000
    environment:
      <<: [*common-environment, *content-publishing-env]
    depends_on:
      - redis
      - ipfs
    networks:
      - gateway-net

  content-publishing-service-worker:
    image: projectlibertylabs/content-publishing-service:${DOCKER_TAG:-latest}
    deploy:
      mode: replicated
      replicas: 1
    ports:
      - ${SERVICE_PORT_4:-3020}:3000
    environment:
      <<: [*common-environment, *content-publishing-env]
      START_PROCESS: content-publishing-worker
    depends_on:
      - redis
      - ipfs
    networks:
      - gateway-net

  content-watcher-service:
    image: projectlibertylabs/content-watcher-service:${DOCKER_TAG:-latest}
    deploy:
      mode: replicated
      replicas: 1
    ports:
      - ${SERVICE_PORT_1}:3000
    environment:
      <<: [*common-environment, *content-watcher-env]
    depends_on:
      - redis
      - ipfs
    networks:
      - gateway-net

  graph-service-api:
    image: projectlibertylabs/graph-service:${DOCKER_TAG:-latest}
    deploy:
      mode: replicated
      replicas: 1
    ports:
      - ${SERVICE_PORT_2}:3000
    environment:
      <<: [*common-environment, *graph-service-env]
      START_PROCESS: graph-api
    depends_on:
      - redis
    networks:
      - gateway-net

  graph-service-worker:
    image: projectlibertylabs/graph-service:${DOCKER_TAG:-latest}
    deploy:
      mode: replicated
      replicas: 1
    ports:
      - ${SERVICE_PORT_5:-3022}:3000
    environment:
      <<: [*common-environment, *graph-service-env]
      START_PROCESS: graph-worker
    depends_on:
      - redis
    networks:
      - gateway-net

  account-service-api:
    image: projectlibertylabs/account-service:${DOCKER_TAG:-latest}
    deploy:
      mode: replicated
      replicas: 1
    ports:
      - ${SERVICE_PORT_3}:3000
    command: account-api
    environment:
      <<: [*common-environment, *account-service-env]
    depends_on:
      - redis
    networks:
      - gateway-net

  account-service-worker:
    image: projectlibertylabs/account-service:${DOCKER_TAG:-latest}
    deploy:
      mode: replicated
      replicas: 1
    ports:
      - "${SERVICE_PORT_6:-3023}:3000"
    command: account-worker
    environment:
      <<: [*common-environment, *account-service-env]
    depends_on:
      - redis
    networks:
      - gateway-net

volumes:
  ipfs_data:
  chainstorage:
    external: false
  redis_data:

networks:
  gateway-net:
    driver: overlay
