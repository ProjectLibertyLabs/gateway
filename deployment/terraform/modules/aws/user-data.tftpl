#!/bin/bash
set -xe

# Install Docker
echo "Installing Docker..."
sudo apt-get update
sudo apt-get install docker -y docker.io
echo "Installing aws cli..."
sudo apt-get install awscli -y
sudo usermod -aG docker ubuntu 
sudo systemctl enable docker
sudo systemctl start docker

echo ${node_number}
# REMOVE: If the IAM Role is configured correctly, we don't need to set the AWS credentials
# export AWS_ACCESS_KEY_ID=${SWARM_AWS_ACCESS_KEY_ID}
# export AWS_SECRET_ACCESS_KEY=${SWARM_AWS_SECRET_ACCESS_KEY}

# aws configure set aws_access_key_id ${SWARM_AWS_ACCESS_KEY_ID}
# aws configure set aws_secret_access_key ${SWARM_AWS_SECRET_ACCESS_KEY}
# aws configure set default_region ${SWARM_AWS_REGION}

if [[ "${node_number}" == "0" ]]; then
    # Initialize swarm and generate tokens
    echo "Initializing Swarm..."
    docker swarm init --advertise-addr $(hostname -i):2377
    export MANAGER_TOKEN=$(docker swarm join-token manager | grep token | xargs echo -n)
    export WORKER_TOKEN=$(docker swarm join-token worker | grep token | xargs echo -n)

    # Store tokens securely (e.g., AWS SSM Parameter Store)
    echo "Storing Manager Token [$MANAGER_TOKEN]"
    echo "Storing Worker Token [$WORKER_TOKEN]"
    aws ssm put-parameter --region us-east-2 --name '/swarm/token/manager' --type String --overwrite --value "$MANAGER_TOKEN"
    aws ssm put-parameter --region us-east-2 --name '/swarm/token/worker' --type String --overwrite --value "$WORKER_TOKEN"
else
    # Retrieve tokens securely (e.g., AWS SSM Parameter Store)
    echo "Retrieving Docker Swarm Worker Token..."
    WORKER_TOKEN=$(aws ssm get-parameter --region us-east-2 --name '/swarm/token/manager' --query 'Parameter.Value' --output text)
    eval "${WORKER_TOKEN}"
    sleep 5
fi

echo "Swarm initialization completed."
