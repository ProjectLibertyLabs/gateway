# Copy this file to ".env.dev" and ".env.docker.dev", and then tweak values for local development

# Port that the application REST endpoints listen on
API_PORT=3000

# Blockchain node address
FREQUENCY_URL=ws://0.0.0.0:9944
#FREQUENCY_URL=ws://frequency:9944                    #docker dev

# Timeout value (seconds) for connection to chain
FREQUENCY_TIMEOUT_SECS=10

# Blockchain node address resolvable from the client browser
FREQUENCY_HTTP_URL=http://0.0.0.0:9944
#FREQUENCY_HTTP_URL=http://frequency:9944             #docker dev
#FREQUENCY_HTTP_URL=https://0.frequency.xyz          #mainnet
#FREQUENCY_HTTP_URL=https://rpc.testnet.amplica.io   #testnet(paseo)

# Specifies the provider ID
PROVIDER_ID=1

# Base URL for provider webhook endpoints
#WEBHOOK_BASE_URL=http://localhost:5555/api/v3
WEBHOOK_BASE_URL=http://host.docker.internal:3001/webhooks/account-service

# Redis URL
REDIS_URL=redis://0.0.0.0:6379
#REDIS_URL=redis://redis:6379                        #docker dev

# How many seconds to delay between successive scans of the chain
# for new content (after end of chain is reached)
BLOCKCHAIN_SCAN_INTERVAL_SECONDS=3

# Whether to examine blocks that have not been finalized when tracking extrinsic completion
# Trusting unfinalized blocks is faster but in the unlikely event of a chain reorganization
# it may result in incorrect data. If set to false, the service will wait for blocks to be finalized
TRUST_UNFINALIZED_BLOCKS=true

# An optional bearer token authentication to the provider webhook
PROVIDER_ACCESS_TOKEN=some-token

# Seed phrase for provider MSA control key
PROVIDER_ACCOUNT_SEED_PHRASE='//Alice'

# Number of failures allowed in the provider webhook before the service is marked down
WEBHOOK_FAILURE_THRESHOLD=3

# Number of seconds between provider webhook retry attempts when failing
WEBHOOK_RETRY_INTERVAL_SECONDS=10

# Number of `/health` endpoint failures allowed before marking the provider webhook service down
HEALTH_CHECK_MAX_RETRIES=4

# Number of seconds to retry provider webhook `/health` endpoint when failing
HEALTH_CHECK_MAX_RETRY_INTERVAL_SECONDS=10

# Minimum number of consecutive successful calls to the provider webhook
# `/health` endpoint before it is marked up again
HEALTH_CHECK_SUCCESS_THRESHOLD=10

# Maximum amount of provider capacity this app is allowed to use (per epoch)
#     type: 'percentage' | 'amount'
#     value: number (may be percentage, ie '80', or absolute amount of capacity)
CAPACITY_LIMIT='{"serviceLimit":{"type":"percentage","value":"80"}}'

# URL for the Sign In With Frequency V1 UI
SIWF_URL=https://ProjectLibertyLabs.github.io/siwf/v1/ui

# URL for the Sign In With Frequency V2
# Required for local development
# Defaults to Frequency Access with @projectlibertylabs/siwf@2 defaults
# SIWF_V2_URL=

# Enable debug mode for development
DEBUG=true

# Prefix to use for Redis cache keys
CACHE_KEY_PREFIX=account:

# Graph Sdk environment
GRAPH_ENVIRONMENT_TYPE=TestnetPaseo
#GRAPH_ENVIRONMENT_TYPE=Mainnet

# Api timeout limit in milliseconds
API_TIMEOUT_MS=5000

# Api json body size limit in string (some examples: 100kb or 5mb or etc)
API_BODY_JSON_LIMIT=1mb
