# Copy this file to ".env", and then tweak values for local development

# Port that the application REST endpoints listen on
API_PORT=3000
WORKER_API_PORT=3000

# Blockchain node address, used to access the blockchain API
FREQUENCY_API_WS_URL=ws://0.0.0.0:9944

# Timeout value (seconds) for connection to chain
FREQUENCY_TIMEOUT_SECS=10

# Specifies the provider ID
PROVIDER_ID=1

# Seed phrase for provider MSA control key
PROVIDER_ACCOUNT_SEED_PHRASE='//Alice'

# Redis URL
# Only one of REDIS_URL or REDIS_OPTIONS may be specified.
# Additional Redis options may be specified as query parameters.
# See https://ioredis.readthedocs.io/en/latest/API/#new-redisport-host-options
REDIS_URL=redis://0.0.0.0:6379?commandTimeout=10000
# REDIS_URL=redis://redis:6379                        #docker dev

# Redis client options as a JSON object string.
# Only one of REDIS_URL or REDIS_OPTIONS may be specified.
# See https://ioredis.readthedocs.io/en/latest/API/#new-redisport-host-options
# REDIS_OPTIONS='{"host": "0.0.0.0", "port": 6379, "commandTimeout":10000, "tls": true}' # equivalent to 'rediss://0.0.0.0:6379?commandTimeout=10000'
# REDIS_OPTIONS='{"host": "0.0.0.0", "port": 6379, "commandTimeout":10000}' # equivalent to 'redis://0.0.0.0:6379?commandTimeout=10000'


# Max number of jobs allowed on the 'graphUpdateQueue' before
# blockchain scan will be paused to allow queue to drain
QUEUE_HIGH_WATER=1000

# Number of seconds to retain pending graph updates in the Redis cache to avoid redundant fetches from the chain
DEBOUNCE_SECONDS=10

# Maximum amount of provider capacity this app is allowed to use (per epoch)
# type: 'percentage' | 'amount'
# value: number (may be percentage, ie '80', or absolute amount of capacity)
CAPACITY_LIMIT='{"serviceLimit":{"type":"percentage","value":"80"}}'

# Add the graph environment type. This can be 'TestnetPaseo' or 'Mainnet'.
# Mainnet is also used for frequencychain/standalone-node:latest
GRAPH_ENVIRONMENT_TYPE=Mainnet

# How many seconds to delay between successive scans of the chain
# (after end of chain is reached)
BLOCKCHAIN_SCAN_INTERVAL_SECONDS=6

# Number of failures allowed in the provider webhook before the service is marked down
WEBHOOK_FAILURE_THRESHOLD=3

# Number of seconds between provider webhook retry attempts when failing
WEBHOOK_RETRY_INTERVAL_SECONDS=10

# Prefix to use for Redis cache keys
CACHE_KEY_PREFIX=graph:

# Api timeout limit in milliseconds
API_TIMEOUT_MS=30000

# Api json body size limit in string (some examples: 100kb or 5mb or etc)
API_BODY_JSON_LIMIT=1mb

# This seed is used for generating an encryption/decryption key for encrypted sensitive data at rest
AT_REST_ENCRYPTION_KEY_SEED='egg angry govern region tuition hawk solid rotate heart upgrade coral van'

# Timeout in milliseconds to wait for a response as part of a request to an HTTP endpoint
# Make sure this is always < API_TIMEOUT_MS
HTTP_RESPONSE_TIMEOUT_MS=3000

# Specify log verbosity level: trace, debug, info, warn, error, fatal
# Default: info
LOG_LEVEL=debug

# Control whether logs are pretty-printed on one line or multiple lines, or plain JSON
# Range: true/false, compact
# Default: false
PRETTY=true
