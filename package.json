{
  "name": "@projectlibertylabs/gateway",
  "version": "1.0.0",
  "description": "Monorepo for Gateway shared packages",
  "author": "Project Liberty, LLC",
  "license": "Apache-2.0",
  "workspaces": [
    "packages/*"
  ],
  "scripts": {
    "build:account": "nest build account-api && nest build account-worker",
    "build:content-publishing": "nest build content-publishing-api && nest build content-publishing-worker",
    "build:content-watcher": "nest build content-watcher",
    "build:graph": "nest build graph-api && nest build graph-worker",
    "build": "npm run build:account ; npm run build:content-publishing ; npm run build:content-watcher ; npm run build:graph",
    "start:account-api": "nest start account-api",
    "start:account-api:watch": "nest start account-api --watch",
    "start:account-api:prod": "node dist/apps/account-api/main.js",
    "start:account-api:dev": "dotenvx run -f .env.account -- nest start account-api --watch",
    "start:account-api:debug": "dotenvx run -f .env.account -- nest start account-api --debug --watch",
    "start:account-worker": "nest start account-worker",
    "start:account-worker:watch": "nest start account-worker --watch",
    "start:account-worker:prod": "node dist/apps/account-worker/main.js",
    "start:account-worker:dev": "dotenvx run -f .env.account -- nest start account-worker --watch",
    "start:account-worker:debug": "dotenvx run -f .env.account -- nest start account-worker --debug --watch",
    "start:content-publishing-api": "nest start content-publishing-api",
    "start:content-publishing-api:watch": "nest start content-publishing-api --watch",
    "start:content-publishing-api:prod": "node dist/apps/content-publishing-api/main.js",
    "start:content-publishing-api:dev": "dotenvx run -f .env.content-publishing -- nest start content-publishing-api --watch",
    "start:content-publishing-api:debug": "dotenvx run -f .env.content-publishing -- nest start content-publishing-api --debug --watch",
    "start:content-publishing-worker": "nest start content-publishing-worker",
    "start:content-publishing-worker:watch": "nest start content-publishing-worker --watch",
    "start:content-publishing-worker:prod": "node dist/apps/content-publishing-worker/main.js",
    "start:content-publishing-worker:dev": "dotenvx run -f .env.content-publishing -- nest start content-publishing-worker --watch",
    "start:content-publishing-worker:debug": "dotenvx run -f .env.content-publishing -- nest start content-publishing-worker --debug --watch",
    "start:content-watcher": "nest start content-watcher",
    "start:content-watcher:watch": "nest start content-watcher --watch",
    "start:content-watcher:prod": "node dist/apps/content-watcher/main.js",
    "start:content-watcher:dev": "dotenvx run -f .env.content-watcher -- nest start content-watcher --watch",
    "start:content-watcher:debug": "dotenvx run -f .env.content-watcher -- nest start content-watcher --debug --watch",
    "start:graph-api": "nest start graph-api",
    "start:graph-api:watch": "nest start graph-api --watch",
    "start:graph-api:prod": "node dist/apps/graph-api/main.js",
    "start:graph-api:dev": "dotenvx run -f .env.graph -- nest start graph-api --watch",
    "start:graph-api:debug": "dotenvx run -f .env.graph -- nest start graph-api --debug --watch",
    "start:graph-worker": "nest start graph-worker",
    "start:graph-worker:watch": "nest start graph-worker --watch",
    "start:graph-worker:prod": "node dist/apps/graph-worker/main.js",
    "start:graph-worker:dev": "dotenvx run -f .env.graph -- nest start graph-worker --watch",
    "start:graph-worker:debug": "dotenvx run -f .env.graph -- nest start graph-worker --debug --watch",
    "generate:openapi:account": "dotenvx run -f env-files/account.template.env -- nest start account-api -- --writeOpenApi",
    "generate:openapi:content-publishing": "dotenvx run -f env-files/content-publishing.template.env -e ENVIRONMENT=dev -- nest start content-publishing-api -- --writeOpenApi",
    "generate:openapi:content-watcher": "dotenvx run -f env-files/content-watcher.template.env -- nest start content-watcher -- --writeOpenApi",
    "generate:openapi:graph": "dotenvx run -f env-files/graph.template.env -- nest start graph-api -- --writeOpenApi",
    "generate:openapi": "npm run generate:openapi:account ; npm run generate:openapi:content-publishing ; npm run generate:openapi:content-watcher ; npm run generate:openapi:graph",
    "generate:types:account": "npx @hey-api/openapi-ts -i openapi-specs/account-webhooks.openapi.yaml -o libs/types/src/account-webhook ; prettier --write libs/types/src/account-webhook",
    "generate:types:graph": "npx openapi-client-axios-typegen openapi-specs/graph-webhooks.openapi.yaml > libs/types/src/graph-webhook/webhook-types.d.ts ; prettier --write libs/types/src/graph-webhook/webhook-types.d.ts",
    "generate:types:content-watcher": "npx @hey-api/openapi-ts -i openapi-specs/content-announcement.openapi.json -o libs/types/src/content-announcement ; prettier --write libs/types/src/content-announcement",
    "generate:types": "npm run generate:types:account ; npm run generate:types:graph ; npm run generate:types:content-watcher",
    "pregenerate:swagger-ui:account": "npx --yes @redocly/cli build-docs openapi-specs/account-webhooks.openapi.yaml --output=./docs/account/webhooks.html",
    "generate:swagger-ui:account": "npx --yes @redocly/cli build-docs openapi-specs/account.openapi.json --output=./docs/account/index.html",
    "generate:swagger-ui:content-publishing": "npx --yes @redocly/cli build-docs openapi-specs/content-publishing.openapi.json --output=./docs/content-publishing/index.html",
    "pregenerate:swagger-ui:content-watcher": "npx --yes @redocly/cli build-docs openapi-specs/content-announcement.openapi.json --output=./docs/content-watcher/webhooks.html",
    "generate:swagger-ui:content-watcher": "npx --yes @redocly/cli build-docs openapi-specs/content-watcher.openapi.json --output=./docs/content-watcher/index.html",
    "generate:swagger-ui:graph": "npx --yes @redocly/cli build-docs openapi-specs/graph.openapi.json --output=./docs/graph/index.html",
    "pregenerate:swagger-ui:graph": "npx --yes @redocly/cli build-docs openapi-specs/graph-webhooks.openapi.yaml --output=./docs/graph/webhooks.html",
    "generate:swagger-ui": "npm run generate:swagger-ui:account ; npm run generate:swagger-ui:content-publishing ; npm run generate:swagger-ui:content-watcher ; npm run generate:swagger-ui:graph",
    "test:account": "dotenvx run -f env-files/account.template.env -- jest 'account*'",
    "test:content-publishing": "dotenvx run -f env-files/content-publishing.template.env -- jest 'content-publishing*'",
    "test:content-watcher": "dotenvx run -f env-files/content-watcher.template.env -- jest 'content-watcher*'",
    "test:graph": "dotenvx run -f env-files/graph.template.env -- jest 'graph*'",
    "test:libs:cache": "dotenvx run -f env-files/graph.template.env -- jest 'libs/cache*'",
    "test:libs": "npm run test:libs:cache",
    "test": "npm run test:account ; npm run test:content-publishing ; npm run test:content-watcher ; npm run test:graph ; npm run test:libs",
    "test:verbose": "jest --coverage --verbose",
    "test:e2e:account": "dotenvx run -f env-files/account.template.env -- jest --runInBand --detectOpenHandles --testRegex 'account-api/.*\\.e2e-spec\\.ts'",
    "test:e2e:delegations": "dotenvx run -f env-files/account.template.env -- jest --runInBand --detectOpenHandles --testRegex 'account-api/test/delegations.controller.e2e-spec.ts' -t 'v1/delegation/revokeDelegation'",
    "test:e2e:content-publishing": "dotenvx run -f env-files/content-publishing.template.env -- jest --testRegex \".e2e-spec.ts\" --detectOpenHandles 'content-publishing*'",
    "test:e2e:content-watcher": "dotenvx run -f env-files/content-watcher.template.env -- jest --testRegex \".e2e-spec.ts\" --detectOpenHandles 'content-watcher*'",
    "test:e2e:graph": "dotenvx run -f env-files/graph.template.env -- jest --testRegex \".e2e-spec.ts\" --detectOpenHandles 'graph*'",
    "test:k6:account": "for t in apps/account-api/k6-test/*.k6.js ; do k6 run ${t} ; done",
    "format": "prettier --write .",
    "lint": "eslint apps/**/*.[tj]s libs/**/*.[tj]s",
    "lint:account": "eslint apps/account*/**/*.[tj]s libs/account-lib/**/*.[tj]s",
    "lint:content-publishing": "eslint apps/content-publishing*/**/*.[tj]s libs/content-publishing-lib/**/*.[tj]s",
    "lint:content-watcher": "eslint apps/content-watcher/**/*.[tj]s libs/content-watcher-lib/**/*.[tj]s",
    "lint:graph": "eslint apps/graph*/**/*.[tj]s libs/graph-lib/**/*.[tj]s",
    "lint:libs": "eslint libs/**/*.[tj]s",
    "lint:fix": "eslint --fix apps/**/*.[tj]s libs/**/*.[tj]s",
    "setup:content-publishing:chain": "node scripts/content-publishing/local-init.cjs",
    "setup:content-watcher:chain": "node scripts/content-watcher/local-chain-setup.cjs",
    "setup:content-watcher:publish": "node scripts/content-watcher/content-setup.js",
    "setup:content-watcher:webhook": "node scripts/content-watcher/webhook-cat.cjs",
    "setup:graph:chain": "tsx scripts/graph/chain-setup.ts",
    "setup:sign-with-uri": "tsx setup/src/sign-with-uri/main.ts"
  },
  "dependencies": {
    "@bull-board/api": "^5.21.4",
    "@bull-board/express": "^5.21.4",
    "@bull-board/nestjs": "^5.21.4",
    "@bull-board/ui": "^5.21.4",
    "@dsnp/activity-content": "^1.1.0",
    "@dsnp/frequency-schemas": "~1.1.0",
    "@dsnp/graph-sdk": "^1.1.4",
    "@dsnp/parquetjs": "^1.7.0",
    "@frequency-chain/api-augment": "~1.11.1",
    "@multiformats/blake2": "^1.0.13",
    "@nestjs/bullmq": "^10.2.1",
    "@nestjs/common": "^10.0.0",
    "@nestjs/config": "^3.2.3",
    "@nestjs/core": "^10.0.0",
    "@nestjs/event-emitter": "^2.0.4",
    "@nestjs/microservices": "^10.4.1",
    "@nestjs/platform-express": "^10.4.4",
    "@nestjs/schedule": "^4.1.0",
    "@nestjs/swagger": "^7.4.0",
    "@polkadot/api": "^10.9.1",
    "@polkadot/api-base": "^10.9.1",
    "@polkadot/keyring": "^12.6.2",
    "@polkadot/types": "^10.9.1",
    "@polkadot/util": "^12.6.2",
    "@polkadot/util-crypto": "^12.6.2",
    "@projectlibertylabs/siwf": "^1.1.2",
    "@songkeys/nestjs-redis": "^10.0.0",
    "@types/express": "^4.17.21",
    "@types/multer": "^1.4.12",
    "axios": "^1.7.5",
    "bullmq": "^5.12.12",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.1",
    "form-data": "^4.0.0",
    "ioredis": "^5.4.1",
    "ipfs-only-hash": "^4.0.0",
    "joi": "^17.13.1",
    "mime-types": "^2.1.35",
    "multiformats": "^9.9.0",
    "multihashes": "^4.0.3",
    "reflect-metadata": "^0.2.0",
    "rxjs": "^7.8.1",
    "time-constants": "^1.0.3"
  },
  "devDependencies": {
    "@dotenvx/dotenvx": "^1.14.0",
    "@hey-api/openapi-ts": "^0.45.1",
    "@jest/globals": "^29.7.0",
    "@nestjs/cli": "^10.4.5",
    "@nestjs/schematics": "^10.0.0",
    "@nestjs/testing": "^10.4.1",
    "@projectlibertylabs/frequency-scenario-template": "^1.1.6",
    "@types/jest": "^29.5.2",
    "@types/node": "^20.3.1",
    "@types/readline-sync": "^1.4.8",
    "@types/supertest": "^6.0.0",
    "@types/time-constants": "^1.0.2",
    "@typescript-eslint/eslint-plugin": "^7.18.0",
    "@typescript-eslint/parser": "^7.18.0",
    "dotenv": "^16.4.5",
    "eslint": "^8.57.0",
    "eslint-config-airbnb-base": "^15.0.0",
    "eslint-config-airbnb-typescript": "^18.0.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-import-resolver-typescript": "^3.6.3",
    "eslint-plugin-import": "^2.30.0",
    "eslint-plugin-prettier": "^5.2.1",
    "eslint-plugin-unused-imports": "^4.1.4",
    "ioredis-mock": "^8.9.0",
    "jest": "^29.5.0",
    "license-report": "^6.5.0",
    "minimist": "^1.2.8",
    "openapi-client-axios-typegen": "^7.6.2",
    "prettier": "^3.0.0",
    "readline-sync": "^1.4.10",
    "reflect-metadata": "^0.2.2",
    "source-map-support": "^0.5.21",
    "supertest": "^7.0.0",
    "ts-jest": "^29.1.0",
    "ts-loader": "^9.4.3",
    "ts-node": "^10.9.1",
    "tsconfig-paths": "^4.2.0",
    "tsx": "^4.19.0",
    "typescript": "^5.5.4"
  }
}
