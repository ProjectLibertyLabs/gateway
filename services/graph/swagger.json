{
  "openapi": "3.0.0",
  "paths": {
    "/v1/graphs/getGraphs": {
      "post": {
        "operationId": "GraphControllerV1_getGraphs",
        "summary": "Fetch graphs for specified dsnpIds and blockNumber",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GraphsQueryParamsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Graphs retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserGraphDto"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "v1/graphs"
        ]
      }
    },
    "/v1/graphs": {
      "put": {
        "operationId": "GraphControllerV1_updateGraph",
        "summary": "Request an update to given users graph",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProviderGraphDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Graph update request created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GraphChangeRepsonseDto"
                }
              }
            }
          }
        },
        "tags": [
          "v1/graphs"
        ]
      }
    },
    "/v1/webhooks": {
      "get": {
        "operationId": "WebhooksControllerV1_getAllWebhooks",
        "summary": "Get all registered webhooks",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Retrieved all registered webhooks"
          }
        },
        "tags": [
          "v1/webhooks"
        ]
      },
      "put": {
        "operationId": "WebhooksControllerV1_watchGraphs",
        "summary": "Watch graphs for specified dsnpIds and receive updates",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WatchGraphsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully started watching graphs"
          }
        },
        "tags": [
          "v1/webhooks"
        ]
      },
      "delete": {
        "operationId": "WebhooksControllerV1_deleteAllWebhooks",
        "summary": "Delete all registered webhooks",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Removed all registered webhooks"
          }
        },
        "tags": [
          "v1/webhooks"
        ]
      }
    },
    "/v1/webhooks/users/{msaId}": {
      "get": {
        "operationId": "WebhooksControllerV1_getWebhooksForMsa",
        "summary": "Get all registered webhooks for a specific MSA ID",
        "parameters": [
          {
            "name": "msaId",
            "required": true,
            "in": "path",
            "example": "2",
            "description": "MSA ID for which to request registered webhooks ",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "includeAll",
            "required": false,
            "in": "query",
            "example": true,
            "description": "Boolean whether to include webhooks registered for 'all' MSAs (default: true)",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved all registered webhooks for the given MSA ID"
          }
        },
        "tags": [
          "v1/webhooks"
        ]
      },
      "delete": {
        "operationId": "WebhooksControllerV1_deleteWebhooksForMsa",
        "summary": "Delete all webhooks registered for a specific MSA",
        "parameters": [
          {
            "name": "msaId",
            "required": true,
            "in": "path",
            "example": "2",
            "description": "MSA for which to remove all webhook registrations",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Removed all registered webhooks for the specified MSA"
          }
        },
        "tags": [
          "v1/webhooks"
        ]
      }
    },
    "/v1/webhooks/urls": {
      "get": {
        "operationId": "WebhooksControllerV1_getWebhooksForUrl",
        "summary": "Get all webhooks registered to the specified URL",
        "parameters": [
          {
            "name": "url",
            "required": true,
            "in": "query",
            "example": "http://localhost/webhook",
            "description": "URL for which to fetch all watched MSAs",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved all webhooks registered to the specified URL"
          }
        },
        "tags": [
          "v1/webhooks"
        ]
      },
      "delete": {
        "operationId": "WebhooksControllerV1_deleteAllWebhooksForUrl",
        "summary": "Delete all MSA webhooks registered with the given URL",
        "parameters": [
          {
            "name": "url",
            "required": true,
            "in": "query",
            "example": "http://localhost/webhook",
            "description": "URL for which to un-watch all MSAs",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Removed all webhooks registered to the specified URL"
          }
        },
        "tags": [
          "v1/webhooks"
        ]
      }
    },
    "/healthz": {
      "get": {
        "operationId": "HealthController_healthz",
        "summary": "Check the health status of the service",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Service is healthy"
          }
        },
        "tags": [
          "health"
        ]
      }
    },
    "/livez": {
      "get": {
        "operationId": "HealthController_livez",
        "summary": "Check the live status of the service",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Service is live"
          }
        },
        "tags": [
          "health"
        ]
      }
    },
    "/readyz": {
      "get": {
        "operationId": "HealthController_readyz",
        "summary": "Check the ready status of the service",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Service is ready"
          }
        },
        "tags": [
          "health"
        ]
      }
    }
  },
  "info": {
    "title": "Graph Service",
    "description": "Graph Service API",
    "version": "1.0",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "securitySchemes": {
      "bearer": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http",
        "description": "Enter JWT token"
      },
      "cookie": {
        "type": "apiKey",
        "in": "cookie",
        "name": "SESSION"
      }
    },
    "schemas": {
      "GraphKeyPairDto": {
        "type": "object",
        "properties": {
          "publicKey": {
            "type": "string",
            "description": "Public graph encryption key as a hex string (prefixed with \"0x\")"
          },
          "privateKey": {
            "type": "string",
            "description": "Private graph encryption key as a hex string (prefixed with \"0x\")"
          },
          "keyType": {
            "type": "string",
            "enum": [
              "X25519"
            ],
            "description": "Key type of graph encryption keypair (currently only X25519 supported)",
            "example": "X25519"
          }
        },
        "required": [
          "publicKey",
          "privateKey",
          "keyType"
        ]
      },
      "GraphsQueryParamsDto": {
        "type": "object",
        "properties": {
          "dsnpIds": {
            "description": "Array of MSA IDs for which to query graphs",
            "example": [
              "2",
              "3",
              "4",
              "5"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "privacyType": {
            "enum": [
              "private",
              "public"
            ],
            "type": "string",
            "description": "Graph type to query (public or private)",
            "example": "public"
          },
          "graphKeyPairs": {
            "description": "Graph encryption keypairs for the users requested in `dsnpIds`. (Only for `privacyType` === \"private\"",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GraphKeyPairDto"
            }
          }
        },
        "required": [
          "dsnpIds",
          "privacyType"
        ]
      },
      "DsnpGraphEdge": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "description": "MSA ID of the user represented by this graph edge",
            "example": "3"
          },
          "since": {
            "type": "number",
            "description": "Block number when connection represented by this graph edge was created",
            "example": 12
          }
        },
        "required": [
          "userId",
          "since"
        ]
      },
      "UserGraphDto": {
        "type": "object",
        "properties": {
          "dsnpId": {
            "type": "string",
            "description": "MSA ID that is the owner of the graph represented by the graph edges in this object",
            "example": "2"
          },
          "dsnpGraphEdges": {
            "description": "Optional array of graph edges in the specific user graph represented by this object",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DsnpGraphEdge"
            }
          }
        },
        "required": [
          "dsnpId"
        ]
      },
      "ConnectionDto": {
        "type": "object",
        "properties": {
          "dsnpId": {
            "type": "string",
            "description": "MSA ID representing the target of this connection",
            "example": "3"
          },
          "privacyType": {
            "enum": [
              "private",
              "public"
            ],
            "type": "string",
            "description": "Indicator connection type (public or private)",
            "example": "public"
          },
          "direction": {
            "enum": [
              "connectionTo",
              "connectionFrom",
              "bidirectional",
              "disconnect"
            ],
            "type": "string",
            "description": "Indicator of the direction of this connection",
            "example": "connectionTo"
          },
          "connectionType": {
            "enum": [
              "follow",
              "friendship"
            ],
            "type": "string",
            "description": "Indicator of the type of connection (follow or friendship)",
            "example": "follow"
          }
        },
        "required": [
          "dsnpId",
          "privacyType",
          "direction",
          "connectionType"
        ]
      },
      "ConnectionDtoWrapper": {
        "type": "object",
        "properties": {
          "data": {
            "description": "Wrapper object for array of connections",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConnectionDto"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "ProviderGraphDto": {
        "type": "object",
        "properties": {
          "dsnpId": {
            "type": "string",
            "description": "MSA ID that owns the connections represented in this object",
            "example": "2"
          },
          "connections": {
            "description": "Array of connections known to the Provider for ths MSA referenced in this object",
            "allOf": [
              {
                "$ref": "#/components/schemas/ConnectionDtoWrapper"
              }
            ]
          },
          "graphKeyPairs": {
            "description": "Optional array of graph encryption keypairs decrypting/encrypting the above-referenced users private graph",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GraphKeyPairDto"
            }
          },
          "webhookUrl": {
            "type": "string",
            "description": "Optional URL of a webhook to invoke when the request is complete"
          }
        },
        "required": [
          "dsnpId",
          "connections"
        ]
      },
      "GraphChangeRepsonseDto": {
        "type": "object",
        "properties": {
          "referenceId": {
            "type": "string",
            "description": "Reference ID by which the results/status of a submitted GraphChangeRequest may be retrieved"
          }
        },
        "required": [
          "referenceId"
        ]
      },
      "WatchGraphsDto": {
        "type": "object",
        "properties": {
          "dsnpIds": {
            "description": "MSA IDs for which to watch for graph updates",
            "example": [
              "2",
              "3",
              "4",
              "5"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "webhookEndpoint": {
            "type": "string",
            "description": "Webhook URL to call when graph changes for the referenced MSAs are detected",
            "example": "http://localhost/webhook"
          }
        },
        "required": [
          "webhookEndpoint"
        ]
      }
    }
  }
}